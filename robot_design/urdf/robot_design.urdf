<?xml version="1.0"?>
<robot name="autonomous_robot" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- robot specifications to be reused throughout the URDF -->
  <!-- colour definitions -->
  <material name="Black">
    <color rgba="0 0 0 1.0"/>
  </material>
  
  <material name="Grey">
   <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  
  <material name="Cyan">
   <color rgba="0 1.0 1.0 1.0"/>
  </material>
  
  <material name="White">
    <color rgba="1 1 1 1"/>
  </material>
  
  <!-- robot scaling -->
  <!-- development note: the scale will not also scale the XYZ positions of every part outside of the wheels, manual offset required -->
  <xacro:property name="scale" value="1"/>
  
  <!-- robot base definitions -->
  <xacro:property name="base_width" value="${0.55/scale}"/>
  <xacro:property name="base_length" value="${0.90/scale}"/>
  <xacro:property name="base_height" value="${0.18/scale}"/>

  <!-- robot wheels dimensions -->
  <xacro:property name="wheel_radius" value="${0.10/scale}"/>
  <xacro:property name="wheel_width" value="${0.20/scale}"/>
  
  <!-- adjusts the gap between the wheel and the chassis along the y-axis -->
  <xacro:property name="wheel_ygap" value="${0.11/scale}"/>
  
  <!-- position the back wheels along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_back_zoff" value="0.05"/>
  <xacro:property name="wheel_back_xoff" value="${0.30/scale}"/>
  
  <!-- position the middle wheels along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_middle_zoff" value="0.05"/>
  <xacro:property name="wheel_middle_xoff" value="${0/scale}"/>
  
  <!-- position the front wheels along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_front_zoff" value="0.05"/>
  <xacro:property name="wheel_front_xoff" value="${-0.3/scale}"/>
  
  <!-- cylinder radius -->
  <xacro:property name="cylinder_radius" value="${0.025/scale}"/>
  
  
<!-- Define intertial property macro  -->
  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>
  

<!-- robot base visual -->
  
  <gazebo reference="base_link">
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
        <material name="Black"/>
    </visual>
      
      
<!-- collision data - base -->
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:default_inertial mass="10"/>
  </link>
  
  
<!-- robot footprint used to determine the center of the robot porjected to the ground -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_back_zoff)}" rpy="0 0 0"/>
  </joint>
    
    
<!-- wheels back -->
  <xacro:macro name="wheel_back" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_back_link">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Cyan</material>
    </gazebo>
    
    <link name="${prefix}_back_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
      
<!-- collision data - wheel back -->  
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

    <xacro:default_inertial mass="1"/> 
    </link>

    <joint name="${prefix}_back_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_back_link"/>
      <origin xyz="${x_reflect*wheel_back_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_back_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
 <!-- controller - wheels back -->
    <transmission name="${prefix}_back_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_back_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_back_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  
  </xacro:macro>

  <xacro:wheel_back prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_back prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  

<!-- wheels middle -->
  <xacro:macro name="wheel_middle" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_middle_link">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/White</material>
    </gazebo>
    
    <link name="${prefix}_middle_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
<!-- collision data - wheel middle -->               
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
    <xacro:default_inertial mass="1"/>
    </link>

    <joint name="${prefix}_middle_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_middle_link"/>
      <origin xyz="${x_reflect*wheel_middle_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_middle_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
<!-- controller - wheels middle -->
    <transmission name="${prefix}_middle_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_middle_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_middle_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  
  </xacro:macro>

  <xacro:wheel_middle prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_middle prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  

<!-- wheels front -->
  <xacro:macro name="wheel_front" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_front_link">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Cyan</material>
    </gazebo>
    
    <link name="${prefix}_front_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
<!-- collision data - wheel front -->               
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
    <xacro:default_inertial mass="1"/>
    </link>

    <joint name="${prefix}_front_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_front_link"/>
      <origin xyz="${x_reflect*wheel_front_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_front_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
    
<!-- controller - wheels front -->
    <transmission name="${prefix}_front_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_front_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_front_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
    
  </xacro:macro>

  <xacro:wheel_front prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_front prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  

<!-- manipulator arm - first joint -->  
  <gazebo reference="first_joint">
    <material>Gazebo/White</material>
  </gazebo>
   
    <link name="first_joint">
      <visual>
        <geometry>
          <cylinder length="${0.4/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.57075 0 " xyz="-0.20 0 0"/>
      </visual>
      
     <!-- collision data - first joint -->               
     <collision>
       <origin rpy="0 1.57075 0 " xyz="-0.20 0 0"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.4/scale}"/>
        </geometry>
     </collision>
      
     <xacro:default_inertial mass="1"/>
    </link>  
    
    <joint name="first_joint_base" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-0.7" upper="1.35" velocity="0.5"/>
      <parent link="base_link"/>
      <child link="first_joint"/>
      <origin rpy="0 1.5708 0" xyz="0 0 0.09"/>
    </joint>
  
  
<!-- controller - third joint -->
   <transmission name="first_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="first_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="first_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
  
  
<!-- manipulator arm - first joint enclosure --> 
  <gazebo reference="first_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="first_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/8} ${base_width/8} ${base_height/2}"/>
        </geometry>
        <material name="White"/>
        <origin rpy="0 0 0 " xyz="0 0 0"/>
      </visual>
      
<!-- collision data - first joint enclosure -->
     <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
       <geometry>
         <box size="${base_length/8} ${base_width/8} ${base_height/2}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="first_joint_enclosure_joint" type="fixed">
      <parent link="base_link"/>
      <child link="first_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="0 0 0.13"/>
    </joint> 
    
  
<!-- manipulator arm - second joint --> 
  <gazebo reference="second_joint">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="second_joint">
      <visual>
        <geometry>
          <cylinder length="${0.6/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.5708 0 " xyz="0.278 0 0"/>
      </visual>
      
<!-- collision data - second joint -->               
     <collision>
       <origin rpy="0 1.5708 0 " xyz="0.278 0 0"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.6/scale}"/>
        </geometry>
      </collision>
      
      <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="second_joint_base" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-1.0" upper="1.0" velocity="0.5"/>
      <parent link="first_joint"/>
      <child link="second_joint"/>
      <origin rpy="0 -1.5708 0" xyz="-0.4 0 0"/>
    </joint>


<!-- controller - second joint -->
   <transmission name="second_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="second_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="second_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
   

<!-- manipulator arm - second joint enclosure --> 
  <gazebo reference="second_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="second_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/10} ${base_width/7} ${base_height/2}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 0 " xyz="0.0 0 0"/>
      </visual>
      
<!-- collision data - second joint enclosure -->
     <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
       <geometry>
         <box size="${base_length/10} ${base_width/7} ${base_height/2}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="second_joint_enclosure_joint" type="fixed">
      <parent link="first_joint"/>
      <child link="second_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="-0.4 0 0"/>
    </joint> 

<!-- manipulator arm - third joint --> 
  <gazebo reference="third_joint">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="third_joint">
      <visual>
        <geometry>
          <cylinder length="${0.2/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.5708 0 " xyz="0.098 0 0"/>
      </visual>
      
<!-- collision data - third joint -->               
     <collision>
       <origin rpy="0 1.5708 0 " xyz="0.098 0 0"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.2/scale}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="third_joint_base" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-1.35" upper="1.35" velocity="0.5"/>
      <parent link="second_joint"/>
      <child link="third_joint"/>
      <origin rpy="0 0 0" xyz="0.58 0 0"/>
    </joint> 
    
    
<!-- controller - third joint -->
   <transmission name="third_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="third_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="third_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
    
    
<!-- manipulator arm - third joint enclosure --> 
  <gazebo reference="third_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="third_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/6} ${base_width/6} ${base_height/2}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 0 " xyz="0.0 0 0"/>
      </visual>
      
<!-- collision data - third joint enclosure -->
      <collision>
       <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="${base_length/6} ${base_width/6} ${base_height/2}"/>
        </geometry>
      </collision>

     <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="third_joint_enclosure_joint" type="fixed">
      <parent link="second_joint"/>
      <child link="third_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="0.58 0 0"/>
    </joint> 

    
<!-- manipulator arm - grabber fixture --> 
  <gazebo reference="grabber_fixture">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="grabber_fixture">
      <visual>
        <geometry>
          <box size="${base_length/1.8} ${base_width/8} ${base_height/3}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 1.5708 " xyz="0 0 0"/>
      </visual>
      
<!-- collision data - grabber fixture -->
     <collision>
      <origin rpy="0 0 1.5708 " xyz="0 0 0"/>
       <geometry>
         <box size="${base_length/1.8} ${base_width/8} ${base_height/3}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="1"/>
    </link>
    
    <joint name="grabber_fixture_joint" type="fixed">
      <parent link="third_joint"/>
      <child link="grabber_fixture"/>
      <origin rpy="0 0 0" xyz="0.2 0 0"/>
    </joint> 
    

<!-- manipulator arm - grabber fixture left --> 
  <gazebo reference="grabber_fixture_left">
    <material>Gazebo/Grey</material>
  </gazebo>
  
    <link name="grabber_fixture_left">
      <visual>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="Grey"/>
        <origin rpy="-1.5708 0 0" xyz="0 0.13 0"/>
      </visual>    
      
 <!-- collision data - fixture left -->               
     <collision>
       <origin rpy="-1.5708 0 0" xyz="0 0.13 0"/>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="1"/>       
    </link>
    
    <joint name="grabber_fixture_left_joint" type="prismatic">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="0" upper="0.20" velocity="0.5"/>
      <parent link="grabber_fixture"/>
      <child link="grabber_fixture_left"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint> 

<!-- controller - fixture left -->
   <transmission name="grabber_fixture_left_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="grabber_fixture_left_motor">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="grabber_fixture_left_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
  
  
<!-- manipulator arm - grabber fixture right --> 
  <gazebo reference="grabber_fixture_right">
    <material>Gazebo/Grey</material>
  </gazebo>
  
    <link name="grabber_fixture_right">
      <visual>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="Grey"/>
        <origin rpy="1.5708 0 0" xyz="0 -0.13 0"/>
      </visual>
      
 <!-- collision data - fixture right -->               
     <collision>
       <origin rpy="1.5708 0 0" xyz="0 -0.13 0"/>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="1"/>   
    </link>
    
    <joint name="grabber_fixture_right_joint" type="prismatic">
      <axis xyz="0 -1 0"/>
      <limit effort="1000.0" lower="0" upper="0.20" velocity="0.5"/>
      <parent link="grabber_fixture"/>
      <child link="grabber_fixture_right"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint> 
    
<!-- controller - fixture right -->
   <transmission name="grabber_fixture_right_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="grabber_fixture_right_motor">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="grabber_fixture_right_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
       
    
<!-- manipulator arm - left gripper -->   
    <joint name="left_gripper_joint" type="revolute">
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="-0.548" upper="0.548" velocity="0.5"/>
      <origin rpy="0 0 0" xyz="0.02 0.28 0"/>
      <parent link="grabber_fixture_left"/>
      <child link="left_gripper"/>
    </joint>
  
    <link name="left_gripper">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger.dae"/>
        </geometry>
      </visual>
      
<!-- collision data - left gripper -->     
      <collision>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger.dae"/>
        </geometry>
         <origin rpy="0 0 0" xyz="0 0 0"/>
      </collision>
      <xacro:default_inertial mass="0.05"/>
    </link>
    
<!-- manipulator arm - left gripper controller-->   
    <transmission name="left_gripper_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="left_gripper_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="left_gripper_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>
  
    <joint name="left_tip_joint" type="fixed">
      <parent link="left_gripper"/>
      <child link="left_tip"/>
    </joint>
  
    <link name="left_tip">
      <visual>
        <origin rpy="0 0 0" xyz="0.09137 0.00495 0"/>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger_tip.dae"/>
        </geometry>
      </visual>
      
      <collision>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger_tip.dae"/>
        </geometry>
         <origin rpy="0 0 0" xyz="0.09137 0.00495 0"/>
      </collision>
      <xacro:default_inertial mass="0.05"/>
    </link>
    
    
<!-- manipulator arm - right gripper -->  
    <joint name="right_gripper_joint" type="revolute">
      <axis xyz="0 0 -1"/>
      <limit effort="1000.0" lower="-0.548" upper="0.548" velocity="0.5"/>
      <origin rpy="0 0 0" xyz="0.02 -0.28 0"/>
      <parent link="grabber_fixture_right"/>
      <child link="right_gripper"/>
    </joint>
  
    <link name="right_gripper">
      <visual>
        <origin rpy="-3.1415 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger.dae"/>
        </geometry>
      </visual>
      
<!-- collision data - left gripper -->     
      <collision>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger.dae"/>
        </geometry>
         <origin rpy="-3.1415 0 0" xyz="0 0 0"/>
      </collision>
      <xacro:default_inertial mass="0.05"/>
    </link>
    
<!-- manipulator arm - left gripper controller-->   
    <transmission name="right_gripper_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="right_gripper_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="right_gripper_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>


    <joint name="right_tip_joint" type="fixed">
      <parent link="right_gripper"/>
      <child link="right_tip"/>
    </joint>
  
    <link name="right_tip">
      <visual>
        <origin rpy="-3.1415 0 0" xyz="0.09137 0.00495 0"/>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger_tip.dae"/>
        </geometry>
      </visual>
      
      <collision>
        <geometry>
          <mesh filename="package://urdf_tutorial/meshes/l_finger_tip.dae"/>
        </geometry>
         <origin rpy="-3.1415 0 0" xyz="0.09137 0.00495 0"/>
      </collision>
      <xacro:default_inertial mass="0.05"/>
    </link>


<!-- gazebo control plugin -->  
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNameSpace>/</robotNameSpace>
      </plugin>
    </gazebo>
    
</robot>
