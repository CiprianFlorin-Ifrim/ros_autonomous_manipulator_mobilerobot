<?xml version="1.0"?>
<robot name="autonomous_robot" xmlns:xacro="http://ros.org/wiki/xacro">

<!-- robot specifications to be reused throughout the URDF -->
  <!-- colour definitions -->
  <material name="Black">
    <color rgba="0 0 0 1.0"/>
  </material>
  
  <material name="Grey">
   <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  
  <material name="Cyan">
   <color rgba="0 1.0 1.0 1.0"/>
  </material>
  
  <material name="White">
    <color rgba="1 1 1 1"/>
  </material>
  
<!--################################ SCALING ###################################-->
  <!-- development note: the bigger the number the smaller the number -->
  <!-- default = 1. example: 2 = 50% size, 0.5 = 200% size -->
  <xacro:property name="scale" value="3"/>

<!--############################## DEFINITIONS #################################-->
  <!-- robot base definitions -->
  <xacro:property name="base_width" value="${0.55/scale}"/>
  <xacro:property name="base_length" value="${0.90/scale}"/>
  <xacro:property name="base_height" value="${0.18/scale}"/>

  <!-- robot wheels dimensions -->
  <xacro:property name="wheel_radius" value="${0.10/scale}"/>
  <xacro:property name="wheel_width" value="${0.20/scale}"/>
  
  <!-- adjusts the gap between the wheel and the chassis along the y-axis -->
  <xacro:property name="wheel_ygap" value="${0.10/scale}"/>
  
  <!-- position the back wheels along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_back_zoff" value="${0.05/scale}"/>
  <xacro:property name="wheel_back_xoff" value="${0.35/scale}"/>
  
  <!-- position the middle wheels back along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_middle_back_zoff" value="${0.05/scale}"/>
  <xacro:property name="wheel_middle_back_xoff" value="${0.115/scale}"/>
  
  <!-- position the middle wheels front along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_middle_front_zoff" value="${0.05/scale}"/>
  <xacro:property name="wheel_middle_front_xoff" value="${-0.115/scale}"/>
  
  <!-- position the front wheels along the z-axis and x-axis appropriately --> 
  <xacro:property name="wheel_front_zoff" value="${0.05/scale}"/>
  <xacro:property name="wheel_front_xoff" value="${-0.35/scale}"/>
  
  <!-- cylinder radius -->
  <xacro:property name="cylinder_radius" value="${0.025/scale}"/>
  
  <!-- camera dimensions -->
  <xacro:property name="camera_size" value="${0.05/scale}"/>
  
  <!-- Define intertial property macro  -->
   <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r w">
    <inertial>
       <mass value="${m}"/>
       <inertia ixx="${m*(3*r*r+w*w)/12}" ixy="0" ixz="0" iyy="${m*(3*r*r+w*w)/12}" iyz="0" izz="${m*r*r/2}" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>
  
<!--################################# BASE #####################################-->  
  <!-- development note: dummy link as a workaround for warning: -->
  <!-- "The root link chassis has an inertia specified in the URDF, but KDL does not support a root link with an inertia" -->
  <link name="base_link" />

  <joint name="base_link_joint" type="fixed">
    <parent link="base_link" />
    <child link="chassis" />
  </joint>
  
<!-- robot base visual -->
  <gazebo reference="chassis">
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <link name="chassis">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
        <material name="Black"/>
    </visual>
        
  <!-- collision data - base -->
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="${2/scale}" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

<!--############################## WHEELS BACK ##################################-->      
  <xacro:macro name="wheel_back" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_back_link">
 	<mu1 value="100.0"/>
 	<mu2 value="100.0"/>
 	<kp value="10000000.0" />
 	<kd value="1.0" />
 	<fdir1 value="1 0 0"/>
      <material>Gazebo/Cyan</material>
    </gazebo>
    
    <link name="${prefix}_back_link">
      <visual>
        <origin xyz="${0.0/scale} ${0.0/scale} ${0.0/scale}" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
      
<!-- collision data - wheel back -->  
     <collision>
        <origin xyz="${0.0/scale} ${0.0/scale} ${0.0/scale}" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

    <xacro:cylinder_inertia m="${2/scale}" r="${wheel_radius}" w="${wheel_width}"/>  
    </link>

    <joint name="${prefix}_back_joint" type="continuous">
      <parent link="chassis"/>
      <child link="${prefix}_back_link"/>
      <origin xyz="${(x_reflect*wheel_back_xoff)} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_back_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
 <!-- controller - wheels back -->
    <transmission name="${prefix}_back_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_back_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_back_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  
  </xacro:macro>

  <xacro:wheel_back prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_back prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  
  
<!--########################### WHEELS MIDDLE BACK ###############################-->   
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_middle_back_link">
 	<mu1 value="100.0"/>
 	<mu2 value="100.0"/>
 	<kp value="10000000.0" />
 	<kd value="1.0" />
 	<fdir1 value="1 0 0"/>
      <material>Gazebo/White</material>
    </gazebo>
    
    <link name="${prefix}_middle_back_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White"/>
      </visual>
      
<!-- collision data - wheel middle back -->               
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" w="${wheel_width}"/> 
    </link>

    <joint name="${prefix}_middle_back_joint" type="continuous">
      <parent link="chassis"/>
      <child link="${prefix}_middle_back_link"/>
      <origin xyz="${x_reflect*wheel_middle_back_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_middle_back_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
<!-- controller - wheels middle back -->
    <transmission name="${prefix}_middle_back_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_middle_back_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_middle_back_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  

<!--######################### WHEELS MIDDLE FRONT ##############################-->   
  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_middle_front_link">
 	<mu1 value="100.0"/>
 	<mu2 value="100.0"/>
 	<kp value="10000000.0" />
 	<kd value="1.0" />
 	<fdir1 value="1 0 0"/>
      <material>Gazebo/White</material>
    </gazebo>
  
    <link name="${prefix}_middle_front_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White"/>
      </visual>
      
<!-- collision data - wheel middle front -->               
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="0.5" r="${wheel_radius}" w="${wheel_width}"/> 
    </link>

    <joint name="${prefix}_middle_front_joint" type="continuous">
      <parent link="chassis"/>
      <child link="${prefix}_middle_front_link"/>
      <origin xyz="${x_reflect*wheel_middle_front_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_middle_front_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
<!-- controller - wheels middle front -->
    <transmission name="${prefix}_middle_front_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_middle_front_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_middle_front_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />


<!--############################ WHEELS FRONT #################################-->   
  <xacro:macro name="wheel_front" params="prefix x_reflect y_reflect">
    <gazebo reference="${prefix}_front_link">
 	<mu1 value="100.0"/>
 	<mu2 value="100.0"/>
 	<kp value="10000000.0" />
 	<kd value="1.0" />
 	<fdir1 value="1 0 0"/>
      <material>Gazebo/Cyan</material>
    </gazebo>
    
    <link name="${prefix}_front_link">
      <visual>
        <origin xyz="${0.0/scale} ${0.0/scale} ${0.0/scale}" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
<!-- collision data - wheel front -->               
     <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
    <xacro:cylinder_inertia m="${2/scale}" r="${wheel_radius}" w="${wheel_width}"/>    
    </link>

    <joint name="${prefix}_front_joint" type="continuous">
      <parent link="chassis"/>
      <child link="${prefix}_front_link"/>
      <origin xyz="${x_reflect*wheel_front_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_front_zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
    
<!-- controller - wheels front -->
    <transmission name="${prefix}_front_link_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_front_link_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_front_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>
    
  </xacro:macro>

  <xacro:wheel_front prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel_front prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />
  
  
<!--############################## ARM ########################################-->
<!-- manipulator arm - first joint -->  
  <gazebo reference="first_joint">
    <material>Gazebo/White</material>
  </gazebo>
   
    <link name="first_joint">
      <visual>
        <geometry>
          <cylinder length="${0.4/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.57075 0 " xyz="${-0.20/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
     <!-- collision data - first joint -->               
     <collision>
       <origin rpy="0 1.57075 0 " xyz="${-0.20/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.4/scale}"/>
        </geometry>
     </collision>
      
     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>  
    
    <joint name="first_joint_base" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-0.7" upper="1.35" velocity="0.5"/>
      <parent link="chassis"/>
      <child link="first_joint"/>
      <origin rpy="0 1.5708 0" xyz="${-0.30/scale} ${0/scale} ${0.09/scale}"/>
    </joint>
  
  
<!-- controller - first joint -->
   <transmission name="first_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="first_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="first_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
  
  
<!-- manipulator arm - first joint enclosure --> 
  <gazebo reference="first_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="first_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/8} ${base_width/8} ${base_height/2}"/>
        </geometry>
        <material name="White"/>
        <origin rpy="0 0 0 " xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - first joint enclosure -->
     <collision>
      <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
       <geometry>
         <box size="${base_length/8} ${base_width/8} ${base_height/2}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="first_joint_enclosure_joint" type="fixed">
      <parent link="chassis"/>
      <child link="first_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="${-0.30/scale} ${0/scale} ${0.13/scale}"/>
    </joint> 
    

<!-- manipulator arm - second joint enclosure --> 
  <gazebo reference="second_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="second_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/10} ${base_width/7} ${base_height*4}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 0 " xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - second joint enclosure -->
     <collision>
      <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
       <geometry>
         <box size="${base_length/10} ${base_width/7} ${base_height*4}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="second_joint_enclosure_joint" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-0.15" upper="0.15" velocity="0.5"/>
      <parent link="first_joint"/>
      <child link="second_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="${-0.4/scale} ${0/scale} ${0.3/scale}"/>
    </joint> 
    

<!-- manipulator arm - second joint --> 
  <gazebo reference="second_joint">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="second_joint">
      <visual>
        <geometry>
          <cylinder length="${0.6/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.5708 0 " xyz="${0.278/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - second joint -->               
     <collision>
       <origin rpy="0 1.5708 0 " xyz="${0.278/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.6/scale}"/>
        </geometry>
      </collision>
      
      <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="second_joint_base" type="prismatic">
      <axis xyz="1 0 0"/>
      <limit effort="1000.0" lower="0" upper="0.15" velocity="0.5"/>
      <parent link="second_joint_enclosure"/>
      <child link="second_joint"/>
      <origin rpy="0 -1.5708 0" xyz="${0.0/scale} ${0/scale} ${-0.10/scale}"/>
    </joint>


<!-- controller - second joint -->
   <transmission name="second_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="second_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="second_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
   

<!-- controller - second joint -->
   <transmission name="second_joint_enclosure">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="second_joint_enclosuret">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="second_joint_enclosure_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>


<!-- manipulator arm - third joint --> 
  <gazebo reference="third_joint">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="third_joint">
      <visual>
        <geometry>
          <cylinder length="${0.2/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 1.5708 0 " xyz="${0.098/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - third joint -->               
     <collision>
       <origin rpy="0 1.5708 0 " xyz="${0.098/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <cylinder radius="${cylinder_radius}" length="${0.2/scale}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="third_joint_base" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-2.5" upper="1.00" velocity="0.5"/>
      <parent link="second_joint"/>
      <child link="third_joint"/>
      <origin rpy="0 1.5708 0" xyz="${0.58/scale} ${0/scale} ${0/scale}"/>
    </joint> 
    
    
<!-- controller - third joint -->
   <transmission name="third_joint">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="third_joint">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="third_joint_base">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
    
    
<!-- manipulator arm - third joint enclosure --> 
  <gazebo reference="third_joint_enclosure">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="third_joint_enclosure">
      <visual>
        <geometry>
          <box size="${base_length/6} ${base_width/6} ${base_height/2}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 0 " xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - third joint enclosure -->
      <collision>
       <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <box size="${base_length/6} ${base_width/6} ${base_height/2}"/>
        </geometry>
      </collision>

     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="third_joint_enclosure_joint" type="fixed">
      <parent link="second_joint"/>
      <child link="third_joint_enclosure"/>
      <origin rpy="0 0 0" xyz="${0.58/scale} ${0/scale} ${0/scale}"/>
    </joint> 

    
<!-- manipulator arm - grabber fixture --> 
  <gazebo reference="grabber_fixture">
    <material>Gazebo/White</material>
  </gazebo>
  
    <link name="grabber_fixture">
      <visual>
        <geometry>
          <box size="${base_length/1.8} ${base_width/8} ${base_height/3}"/>
        </geometry>
         <material name="White"/>
        <origin rpy="0 0 1.5708 " xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </visual>
      
<!-- collision data - grabber fixture -->
     <collision>
      <origin rpy="0 0 1.5708 " xyz="${0/scale} ${0/scale} ${0/scale}"/>
       <geometry>
         <box size="${base_length/1.8} ${base_width/8} ${base_height/3}"/>
       </geometry>
     </collision>

     <xacro:default_inertial mass="${0.5/scale}"/>
    </link>
    
    <joint name="grabber_fixture_joint" type="fixed">
      <parent link="third_joint"/>
      <child link="grabber_fixture"/>
      <origin rpy="0 0 0" xyz="${0.2/scale} ${0/scale} ${0/scale}"/>
    </joint> 
    

<!-- manipulator arm - grabber fixture left --> 
  <gazebo reference="grabber_fixture_left">
    <material>Gazebo/Grey</material>
  </gazebo>
  
    <link name="grabber_fixture_left">
      <visual>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="Grey"/>
        <origin rpy="-1.5708 0 0" xyz="${0/scale} ${0.13/scale} ${0/scale}"/>
      </visual>    
      
 <!-- collision data - fixture left -->               
     <collision>
       <origin rpy="-1.5708 0 0" xyz="${0/scale} ${0.13/scale} ${0/scale}"/>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="${0.5/scale}"/>       
    </link>
    
    <joint name="grabber_fixture_left_joint" type="prismatic">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="0" upper="0.20" velocity="0.5"/>
      <parent link="grabber_fixture"/>
      <child link="grabber_fixture_left"/>
      <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
    </joint> 

<!-- controller - fixture left -->
   <transmission name="grabber_fixture_left_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="grabber_fixture_left_motor">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="grabber_fixture_left_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
  
  
<!-- manipulator arm - grabber fixture right --> 
  <gazebo reference="grabber_fixture_right">
    <material>Gazebo/Grey</material>
  </gazebo>
  
    <link name="grabber_fixture_right">
      <visual>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
         <material name="Grey"/>
        <origin rpy="1.5708 0 0" xyz="${0/scale} ${-0.13/scale} ${0/scale}"/>
      </visual>
      
 <!-- collision data - fixture right -->               
     <collision>
       <origin rpy="1.5708 0 0" xyz="${0/scale} ${-0.13/scale} ${0/scale}"/>
        <geometry>
          <cylinder length="${0.3/scale}" radius="${cylinder_radius}"/>
        </geometry>
      </collision>
      
     <xacro:default_inertial mass="${0.5/scale}"/>   
    </link>
    
    <joint name="grabber_fixture_right_joint" type="prismatic">
      <axis xyz="0 -1 0"/>
      <limit effort="1000.0" lower="0" upper="0.20" velocity="0.5"/>
      <parent link="grabber_fixture"/>
      <child link="grabber_fixture_right"/>
      <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
    </joint> 
    
<!-- controller - fixture right -->
   <transmission name="grabber_fixture_right_trans">
     <type>transmission_interface/SimpleTransmission</type>
     <actuator name="grabber_fixture_right_motor">
       <mechanicalReduction>1</mechanicalReduction>
     </actuator>
     <joint name="grabber_fixture_right_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
     </joint>
   </transmission>
       
    
<!-- manipulator arm - left gripper -->   
    <joint name="left_gripper_joint" type="revolute">
      <axis xyz="0 0 1"/>
      <limit effort="1000.0" lower="-0.548" upper="0.548" velocity="0.5"/>
      <origin rpy="0 0 0" xyz="${0.02/scale} ${0.28/scale} ${0/scale}"/>
      <parent link="grabber_fixture_left"/>
      <child link="left_gripper"/>
    </joint>
  
    <link name="left_gripper">
      <visual>
        <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
      </visual>
      
<!-- collision data - left gripper -->     
      <collision>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
         <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </collision>
      <xacro:default_inertial mass="${0.05/scale}"/>
    </link>
    
<!-- manipulator arm - left gripper controller-->   
    <transmission name="left_gripper_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="left_gripper_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="left_gripper_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>

<!-- manipulator arm - left gripper tip-->   
    <joint name="left_tip_joint" type="fixed">
      <parent link="left_gripper"/>
      <child link="left_tip"/>
    </joint>
  
    <link name="left_tip">
      <visual>  
        <origin rpy="0 0 0" xyz="${0.09137/scale} ${0.00495/scale} ${0/scale}"/>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger_tip.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
      </visual>
      
      <collision>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger_tip.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
         <origin rpy="0 0 0" xyz="${0.09137/scale} ${0.00495/scale} ${0/scale}"/>
      </collision>
      <xacro:default_inertial mass="${0.05/scale}"/>
    </link>
    
    
<!-- manipulator arm - right gripper -->  
    <joint name="right_gripper_joint" type="revolute">
      <axis xyz="0 0 -1"/>
      <limit effort="1000.0" lower="-0.548" upper="0.548" velocity="0.5"/>
      <origin rpy="0 0 0" xyz="${0.02/scale} ${-0.28/scale} ${0/scale}"/>
      <parent link="grabber_fixture_right"/>
      <child link="right_gripper"/>
    </joint>
  
    <link name="right_gripper">
      <visual>
        <origin rpy="-3.1415 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
      </visual>
      
<!-- collision data - right gripper -->     
      <collision>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
         <origin rpy="-3.1415 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
      </collision>
      <xacro:default_inertial mass="${0.05/scale}"/>
    </link>
    
<!-- manipulator arm - right gripper controller-->   
    <transmission name="right_gripper_joint_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="right_gripper_joint_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="right_gripper_joint">
	<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      </joint>
    </transmission>

<!-- manipulator arm - right gripper tip-->  
    <joint name="right_tip_joint" type="fixed">
      <parent link="right_gripper"/>
      <child link="right_tip"/>
    </joint>
  
    <link name="right_tip">
      <visual>
        <origin rpy="-3.1415 0 0" xyz="${0.09137/scale} ${0.00495/scale} ${0/scale}"/>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger_tip.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
      </visual>
      
      <collision>
        <geometry>
          <mesh filename="package://assessmentmobilerobots_2022/models/robot_design/meshes/l_finger_tip.dae" scale="${1/scale} ${1/scale} ${1/scale}"/>
        </geometry>
         <origin rpy="-3.1415 0 0" xyz="${0.09137/scale} ${0.00495/scale} ${0/scale}"/>
      </collision>
      <xacro:default_inertial mass="${0.05/scale}"/>
    </link>




<!--############################### SENSORS ##################################-->  
<!-- laser scanner plugin -->  
    <gazebo reference="sensor_laser">
      <material>Gazebo/Cyan</material>
       <sensor type="ray" name="head_hokuyo_sensor">
          <visualize>false</visualize>
          <update_rate>50</update_rate>
          <ray>
	    <scan>
	      <horizontal>
	        <samples>720</samples>
	        <resolution>1</resolution>
	        <min_angle>-3.14159</min_angle>
	        <max_angle>3.14159</max_angle>
	      </horizontal>
	    </scan>
	    <range>
	      <min>0.10</min>
	      <max>15.0</max>
	      <resolution>0.01</resolution>
	    </range>
	    <noise>
	      <type>gaussian</type>
	      <mean>0.0</mean>
	      <stddev>0.01</stddev>
	    </noise>
          </ray>
          <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
	    <topicName>/scan</topicName>
	    <frameName>sensor_laser</frameName>
          </plugin>
        </sensor>
    </gazebo>

 <!-- laser scanner link -->     
    <link name="sensor_laser">
      <visual>
        <origin xyz="${0/scale} ${0/scale} ${0/scale}" rpy="0 0 0" />
        <geometry>
          <cylinder radius="${cylinder_radius*5}" length="${0.06/scale}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
 <!-- laser scanner collision data-->   
      <collision>
        <origin xyz="${0/scale} ${0/scale} ${0/scale}" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="${cylinder_radius*5}" length="${0.06/scale}"/>
        </geometry>
      </collision>
      
      <xacro:default_inertial mass="${0.1/scale}"/>        
    </link>
    
 <!-- laser scanner joint-->   
    <joint name="joint_sensor_laser" type="fixed">
      <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0.12/scale}"/>
      <parent link="chassis"/>
      <child link="sensor_laser"/>
    </joint> 


 <!-- IMU scanner plugin --> 
    <gazebo reference="sensor_imu">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu_data</topicName>
          <bodyName>sensor_imu</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>sensor_imu</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
      </sensor>
    </gazebo>
  
<!-- IMU scanner link -->  
    <link name="sensor_imu">
      <inertial>
        <mass value="${0.001/scale}"/>
        <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
      </inertial>
      <visual>
        <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <box size="${base_length/10} ${base_width/10} ${base_height/10}"/>
        </geometry>
      </visual>
      
<!-- IMU scanner collision data-->     
      <collision>
        <origin rpy="0 0 0" xyz="${0/scale} ${0/scale} ${0/scale}"/>
        <geometry>
          <box size="${base_length/10} ${base_width/10} ${base_height/10}"/>
        </geometry>
      </collision>
    </link>
    
<!-- IMU scanner joint-->  
    <joint name="imu_joint" type="fixed">
      <axis xyz="1 0 0"/> <!-- 0 1 0 -->
        <origin xyz="${0/scale} ${0/scale} ${-0.1/scale}"/>
        <parent link="chassis"/>
        <child link="sensor_imu"/>
    </joint>



<!--gazebo camera plugin-->
    <gazebo reference="camera">
      <material>Gazebo/Cyan</material>
      <sensor type="camera" name="camera">
        <update_rate>30.0</update_rate>
        <camera name="head">
          <horizontal_fov>1.0</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>50</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  
<!--camera link-->
    <link name="camera">
      <visual>
        <geometry>
          <box size="${camera_size} ${camera_size} ${camera_size}"/>
        </geometry>
        <material name="Cyan"/>
      </visual>
      
<!--camera collision data-->    
      <collision>
        <geometry>
          <box size="${camera_size} ${camera_size} ${camera_size}"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="0.02"/>
    </link>

<!--camera joint-->
    <joint name="camera_joint" type="fixed">
      <origin xyz="0.155 0 0" rpy="0 0 0"/>
      <parent link="chassis"/>
      <child link="camera"/>
    </joint>


<!--########################## GAZEBO PLUGINS ###############################-->
<!-- ros control plugin -->
    <gazebo>
         <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
             <robotNamespace>/</robotNamespace>
             <controlPeriod>0.001</controlPeriod>
             <legacyModeNS>false</legacyModeNS>
         </plugin>
    </gazebo> 
  
<!-- omni steering controller plugin -->
<!-- development note: because of problems with odometry caused by the diff_drive -->
<!-- the omni_sterring controller is the only one working accurately with my 8-wheel robot -->
    <gazebo>
         <plugin name="omni_steering" filename="libgazebo_ros_planar_move.so">
             <publishTF>true</publishTF>
             <commandTopic>cmd_vel</commandTopic>
             <robotBaseFrame>base_link</robotBaseFrame>
             <odometryTopic>odom</odometryTopic>
             <odometryFrame>odom</odometryFrame>
             <odometryRate>100.0</odometryRate>
         </plugin>
    </gazebo>

<!-- gazebo joint state plugin --> 
    <gazebo>
         <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
             <joint>first_joint_base</joint>
             <joint>second_joint_enclosure_joint</joint>
             <joint>second_joint_base</joint>
             <joint>third_joint_base</joint>
             <joint>grabber_fixture_left_joint</joint>
             <joint>grabber_fixture_right_joint</joint>
             <joint>left_gripper_joint</joint>
             <joint>right_gripper_joint</joint>
         </plugin>
    </gazebo>

</robot>
