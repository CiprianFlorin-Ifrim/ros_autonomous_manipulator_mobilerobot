#!/usr/bin/env python3 

import rospy
import cv2
import numpy as np

from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError



class camera_1:


  def __init__(self):
    self.image_sub = rospy.Subscriber("/camera/image_raw", Image, self.callback)


  def callback(self,data):
    bridge = CvBridge()

    try:
      cv_image = bridge.imgmsg_to_cv2(data, desired_encoding="bgr8")
    except CvBridgeError as e:
      rospy.logerr(e)
    
    image = cv_image

    resized_image = cv2.resize(image, (360, 640)) 

    #cv2.imshow("Camera output normal", image)
    cv2.imshow("Camera output resized", resized_image)

    cv2.waitKey(3)


#  initializes a ROS node with the name camera_read . When anonymous = True a random number is assigned to the end of the node name
# to make it unique. Since we just have one node with the same name, anonymous is set to False.

def main():
  camera_1()
  
  try:
    rospy.spin()
  except KeyboardInterrupt:
    rospy.loginfo("Shutting down")
  
  cv2.destroyAllWindows()


if __name__ == '__main__':
    rospy.init_node('camera_read', anonymous=False)
    main()
