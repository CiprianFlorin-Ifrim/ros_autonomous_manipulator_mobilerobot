#!/usr/bin/env python3
import rospy
import actionlib
from move_base_msgs.msg import MoveBaseAction, MoveBaseGoal


grid_points = [
[(10.121, -0.734, 0.000), (0.000, 0.000, 0.000, 1.000)],
[(9.921, -0.747, 0.000), (0.000, 0.000, -0.711, 0.703)],
[(4.700, -0.689, 0.000), (0.000, 0.000, -0.700, 0.700)],
[(9.000, -1.100, 0.000), (0.000, 0.000, -0.715, 0.700)],
[(9.000, -1.500, 0.000),(0.000, 0.000 , -0.720, 0.700)],
[(9.000, -1.700, 0.000), (0.000 ,0.000,-0.720, 0.700)],
[(4.700, -1.561, 0.00), (0.000 ,0.000, 0.700 ,0.715)],
[(9.000, -2.650,0.00), (0.00, 0.00, -0.700, 0.720)],
[(4.700, -2.675, 0.000), (0.000, 0.000, -0.700,0.715)],
[(8.800, -3.200, 0.000), (0.000, 0.000, -0.700, 0.715)],
[(7.300, -3.602, 0.000), (0.000, 0.000, -0.700, 0.715)],
[(7.550, -3.900, 0.000), (0.000, 0.000, 0.005, 1.000)],
[(10.500, -3.894, 0.000), (0.000, 0.000, 0.703, 0.711)],
[(10.500, -1.800, 0.000), (0.000, 0.000, 1.000, 0.006)],
[(9.950, -1.940, 0.000), (0.000, 0.000, -0.700, 0.714)],
[(9.900, -4.294, 0.000), (0.000, 0.000, 1.000, 0.016)],
[(4.600, -3.373, 0.000), (0.000, 0.000, -0.698, 0.716)],
[(6.354, -3.600, 0.000), (0.000, 0.000, -0.711, 0.703)],
[(3.773, -4.271, 0.000), (0.000, 0.000, 0.698, 0.716)],
[(3.700, -1.373, 0.000), (0.000, 0.000, 1.000, 0.006)],
[(3.221, -1.440, 0.000), (0.000, 0.000, 1.000, 0.006)],
[(3.257, -4.120, 0.000), (0.000, 0.000, 1.000, 0.006)],
[(2.501, -4.124, 0.000), (0.000, 0.000, 0.703, 0.711)],
[(2.500, -1.500, 0.000), (0.000, 0.000, 1.000, 0.006)],
[(1.509, -1.633, 0.000), (0.000, 0.000, -0.696, 0.718)],
[(1.600, -4.100, 0.000), (0.000, 0.000, -0.006, 1.000)],
[(1.000, -0.550, 0.000), (0.000, 0.000, -0.999, 0.032)],
[(0.000, 0.000, 0.000), (0.000, 0.000, 0.000, 1.000)]
]


def goal_pose(pose):
    goal_pose = MoveBaseGoal()
    goal_pose.target_pose.header.frame_id = 'map' 
    goal_pose.target_pose.pose.position.x = pose[0][0]
    goal_pose.target_pose.pose.position.y = pose[0][1] 
    goal_pose.target_pose.pose.position.z = pose[0][2]    
    goal_pose.target_pose.pose.orientation.x = pose[1][0] 
    goal_pose.target_pose.pose.orientation.y = pose[1][1] 
    goal_pose.target_pose.pose.orientation.z = pose[1][2] 
    goal_pose.target_pose.pose.orientation.w = pose[1][3]    
    return goal_pose


if __name__ == '__main__':
    rospy.init_node('grid_search')
    client = actionlib.SimpleActionClient('move_base', MoveBaseAction) 
    client.wait_for_server()
    while True: 
        for point in grid_points:
            goal = goal_pose(point)
            client.send_goal(goal)
            client.wait_for_result()

